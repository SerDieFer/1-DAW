-- CREACIÓN DE LA BASE DE DATOS DE LA LIBERÍA Y POSTERIOR USO DE ESTA
GO
CREATE DATABASE LIBRARY
GO
USE LIBRARY

-- CREACIÓN DE LAS TABLAS DE LA LIBRERIA
GO
CREATE TABLE BOOKS(
    ISBN CHAR(13) NOT NULL,
    bookTitle VARCHAR(50) NOT NULL,
    bookPrice DECIMAL(7,2) NOT NULL

    CONSTRAINT PK_BOOKS PRIMARY KEY (ISBN)
)
GO
CREATE TABLE MEMBERS(
    ID CHAR(10) NOT NULL,
    memberName VARCHAR(50) NOT NULL,
    memberCity VARCHAR(50) NOT NULL

    CONSTRAINT PK_MEMBERS PRIMARY KEY (ID)
)
GO
CREATE TABLE LOANS (
    loanID INT NOT NULL,
    loanData SMALLDATETIME NOT NULL,
    loanReturn SMALLDATETIME,
    ISBN CHAR(13) NOT NULL,
    ID CHAR(10) NOT NULL

    CONSTRAINT PK_LOANS PRIMARY KEY (loanID),
    CONSTRAINT FK_BOOKSLOANS FOREIGN KEY (ISBN) REFERENCES BOOKS(ISBN),
    CONSTRAINT FK_MEMBERSLOANS FOREIGN KEY (ID) REFERENCES MEMBERS(ID)
)
GO
CREATE TABLE LOST_BOOKS (
    ISBN CHAR(13) NOT NULL,
    ID CHAR(10) NOT NULL,
    memberName VARCHAR(50) NOT NULL,
    lostDate SMALLDATETIME NOT NULL,

    CONSTRAINT PK_LOST_BOOKS PRIMARY KEY (ISBN)
)   

-- INSERTO REGISTROS PARA COMPROBAR EN LAS TABLAS
GO
INSERT INTO BOOKS (ISBN, bookTitle, bookPrice) 
VALUES ('9780141182605', '1984', 15.99),
       ('9780061120084', 'To Kill a Mockingbird', 12.50),
       ('9780743273565', 'The Great Gatsby', 10.75)
GO
INSERT INTO MEMBERS (ID, memberName, memberCity) 
VALUES ('M0001', 'John Smith', 'New York'),
       ('M0002', 'Maria Garcia', 'Madrid'),
       ('M0003', 'Emily Johnson', 'London')
GO
INSERT INTO LOANS (loanID, loanData, loanReturn, ISBN, ID) 
VALUES (1, '2024-04-25', NULL, '9780141182605', 'M0001'),
       (2, '2024-04-26', '2024-04-29', '9780061120084', 'M0002'),
       (3, '2024-04-27', NULL, '9780743273565', 'M0003')

-- CREACION DE BACKUP DE MIEMBROS HISTORICOS
GO
SELECT *
  INTO MEMBERS_HISTORIC
  FROM MEMBERS
 WHERE 1 = 0
 ALTER TABLE MEMBERS_HISTORIC
   ADD changeDate SMALLDATETIME

-- CREACION DEL TRIGGER CUANDO UN MIEMBRO ES BORRADO
GO
CREATE OR ALTER TRIGGER TX_MEMBER_LEAVE ON MEMBERS INSTEAD OF DELETE
AS
BEGIN
    BEGIN TRY
        -- SI NO EXISTEN TRANSACCIONES ABIERTAS SE INICIA UNA TRANSACCION
        --IF @@TRANCOUNT = 0
        BEGIN TRAN
    
            -- COPIA DEL HISTORICO DE MIEMBROS DE LA LIBRERIA
            INSERT INTO MEMBERS_HISTORIC
            SELECT *, 
                   GETDATE()
              FROM DELETED

            -- ACTUALIZACIÓN DE LOS DATOS BORRADOS A LA TABLA DE LIBROS PERDIDOS
            INSERT INTO LOST_BOOKS
            SELECT LOANS.ISBN, 
                   DELETED.ID, 
                   MEMBERS.memberName, 
                   GETDATE()
              FROM LOANS, 
                   MEMBERS,
                   DELETED
             WHERE LOANS.ID = DELETED.ID
               AND LOANS.loanReturn IS NULL

            -- BORRADO EN CASCADA DE LOS DATOS DEL MIEMBRO A BORRAR
            DELETE FROM LOANS
             WHERE ID IN (SELECT ID
                            FROM DELETED)

            DELETE FROM MEMBERS
             WHERE ID IN (SELECT ID
                            FROM DELETED)

        -- SI SOLO EXISTE LA TRANSACCION PREVIA SE HACE COMMIT
        --IF @@TRANCOUNT = 1
        COMMIT
    END TRY
    BEGIN CATCH
        PRINT CONCAT ('CODERROR: ', ERROR_NUMBER(), CHAR(10),
                      'DESCRIPTION: ', ERROR_MESSAGE(), CHAR(10),
                      'LINE: ', ERROR_LINE(), CHAR(10),
                      'PROCEDURE: ', ERROR_PROCEDURE())
        -- SI SOLO EXISTE LA TRANSACCION PREVIA SE HACE COMMIT
        --IF @@TRANCOUNT = 1
        ROLLBACK
    END CATCH
END


    




